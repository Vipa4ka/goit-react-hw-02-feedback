{"version":3,"sources":["components/SectionTitle/SectionTitle.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["SectionTitle","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","className","styles","button","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","leaveFeedback","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAgBeA,EAbM,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACjB,gCACI,6BAAMD,IACLC,M,gBCgBMC,EAjBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,6BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAM,OAC5B,yBAAQC,UAAWC,IAAOC,OAAQC,KAAK,SAASC,QAAS,kBAAIT,EAAgBI,IAA7E,UAAoGA,EAApG,MAA2FA,SCctFM,EApBI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,mBAA7B,OACd,+BACC,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,wCAAWC,OACX,qDAAwBC,IAAxB,WCKSC,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OACE,6BAAMA,KCuDKC,E,4MApDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,cAAgB,SAAChB,GACf,EAAKiB,UAAS,iCACXjB,EAAS,EAAKe,MAAMf,GAAU,O,EAKnCkB,mBAAqB,WACnB,MAA+B,EAAKH,MACnC,OADD,EAAQR,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBU,gCAAkC,WAChC,IAAQZ,EAAQ,EAAKQ,MAAbR,KACR,OAAOa,KAAKC,MAAW,IAALd,EAAU,EAAKW,uB,4CAInC,WACE,MAA+BI,KAAKP,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACA,cAAC,EAAD,CAASjB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS2B,KAAKP,MACdnB,gBAAiB0B,KAAKN,kBAIxB,cAAC,EAAD,CAASxB,MAAM,aAAf,SACC8B,KAAKJ,qBAAuB,EAAK,cAAC,EAAD,CAChCX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,KAAKJ,mBACZP,mBAAoBW,KAAKH,kCAE1B,cAAC,EAAD,CAAcN,QAAQ,+B,GA5CbU,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.3a793543.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SectionTitle = ({title, children}) =>(\r\n    <div>\r\n        <h2 >{title}</h2>\r\n        {children}\r\n    </div>\r\n);\r\n    \r\n\r\nSectionTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default SectionTitle;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.scss';\r\n\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <ul>\r\n      {Object.keys(options).map(option => (\r\n          <button className={styles.button} type=\"button\" onClick={()=>onLeaveFeedback(option)} key={option}>{option} </button>\r\n          \r\n        ))} \r\n    </ul>  \r\n  )\r\n      \r\n};     \r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage }) => (\r\n     <ul>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total:{total()}</li>\r\n      <li>Positive feedback: {positivePercentage()}%</li>\r\n    </ul>  \r\n );\r\n\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.func.isRequired,\r\n  positivePercentage: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Statistics;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({message} )=> {\r\n  return (\r\n    <h4 >{message}</h4>\r\n  )      \r\n};\r\n\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","import React, { Component } from 'react';\n\nimport Section from './components/SectionTitle';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics'\nimport Notification from \"./components/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  leaveFeedback = (option) => {    \n    this.setState(() => ({\n      [option]: this.state[option] + 1\n    }));\n  };\n  \n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n     return good+neutral+bad\n  };\n    \n  countPositiveFeedbackPercentage = () => {\n    const { good} = this.state;\n    return Math.round(good*100/(this.countTotalFeedback()))\n  }\n\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n      <Section title=\"Please leave feedback\">         \n        <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={this.leaveFeedback}\n        />\n        </Section>\n      \n        <Section title=\"Statistics\"> \n        {this.countTotalFeedback() > 0 ? (<Statistics\n          good={good }\n          neutral={neutral }\n          bad={bad }\n          total={this.countTotalFeedback}\n          positivePercentage={this.countPositiveFeedbackPercentage}\n          />):\n        (<Notification message=\"No feedback given\"/>)}\n        </Section>\n        </>\n    );\n  }\n}\n  \n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1R789\"};"],"sourceRoot":""}